version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: receptionist-postgres-dev
    environment:
      POSTGRES_DB: receptionist_ai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - receptionist-network-dev

  # Backend NestJS (desarrollo con hot reload)
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    container_name: receptionist-api-dev
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_DATABASE: receptionist_ai
      NODE_ENV: development
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    volumes:
      - ./api:/app
      - /app/node_modules
      - ./api/temp:/app/temp
    networks:
      - receptionist-network-dev
    command: npm run start:dev

  # Frontend Next.js (desarrollo con hot reload)
  app:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    container_name: receptionist-app-dev
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_APP_NAME: Recepcionista AI (Dev)
      NEXT_PUBLIC_APP_VERSION: 1.0.0-dev
      NODE_ENV: development
    depends_on:
      - api
    volumes:
      - ./app:/app
      - /app/node_modules
      - /app/.next
    networks:
      - receptionist-network-dev
    command: npm run dev

volumes:
  postgres_data_dev:

networks:
  receptionist-network-dev:
    driver: bridge
